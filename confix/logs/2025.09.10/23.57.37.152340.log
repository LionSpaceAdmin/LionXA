2025-09-10 23:57:37,152 DEBUG    root            Loaded Command Group: ['gcloud', 'resource_manager']
2025-09-10 23:57:37,153 DEBUG    root            Loaded Command Group: ['gcloud', 'resource-manager', 'org_policies']
2025-09-10 23:57:37,153 DEBUG    root            Loaded Command Group: ['gcloud', 'resource-manager', 'org-policies', 'set_policy']
2025-09-10 23:57:37,154 DEBUG    root            Running [gcloud.resource-manager.org-policies.set-policy] with arguments: [--organization: "985698468107", POLICY_FILE: "/tmp/domain-policy.yaml"]
2025-09-10 23:57:37,168 DEBUG    urllib3.connectionpool Starting new HTTPS connection (1): cloudresourcemanager.googleapis.com:443
2025-09-10 23:57:38,277 DEBUG    urllib3.connectionpool https://cloudresourcemanager.googleapis.com:443 "POST /v1/organizations/985698468107:setOrgPolicy?alt=json HTTP/11" 400 None
2025-09-10 23:57:38,279 DEBUG    root            Chosen display Format:default
2025-09-10 23:57:38,286 DEBUG    root            Chosen display Format:default
2025-09-10 23:57:38,287 DEBUG    root            Chosen display Format:default
2025-09-10 23:57:38,287 DEBUG    root            (gcloud.resource-manager.org-policies.set-policy) INVALID_ARGUMENT: The policy contains invalid list value(s): [gmail.com]. Please fix the values in the policy and try again:
StoragePolicy{resource=null, constraint=constraints/iam.allowedPolicyMemberDomains, etag=<ByteString@1aa6839d size=0 contents="">, consistencyToken=<ByteString@1aa6839d size=0 contents="">, updateTime=Optional.empty, policy=ListPolicy{inheritFromParent=false, unconditionalFragment=Optional[UnconditionalFragment{allValues=ALL_VALUES_UNSPECIFIED, allowedValues=[ListValue{type=EXACT, canonicalValue=C02mzrr8v, userSuppliedValue=Optional[C02mzrr8v]}, ListValue{type=EXACT, canonicalValue=gmail.com, userSuppliedValue=Optional[gmail.com]}], deniedValues=[], suggestedValue=Optional[]}], conditionalFragments=[]}}
- '@type': type.googleapis.com/google.rpc.BadRequest
  fieldViolations:
  - description: 'Invalid value: [gmail.com].'
    field: policy.list_policy.allowed_values[1]
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/gcloud-cli/538.0.0/google-cloud-sdk/lib/googlecloudsdk/calliope/cli.py", line 987, in Execute
    resources = calliope_command.Run(cli=self, args=args)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Caskroom/gcloud-cli/538.0.0/google-cloud-sdk/lib/googlecloudsdk/calliope/backend.py", line 946, in Run
    resources = command_instance.Run(args)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Caskroom/gcloud-cli/538.0.0/google-cloud-sdk/lib/surface/resource_manager/org_policies/set_policy.py", line 71, in Run
    return service.SetOrgPolicy(
           ^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Caskroom/gcloud-cli/538.0.0/google-cloud-sdk/lib/googlecloudsdk/generated_clients/apis/cloudresourcemanager/v1/cloudresourcemanager_v1_client.py", line 618, in SetOrgPolicy
    return self._RunMethod(
           ^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Caskroom/gcloud-cli/538.0.0/google-cloud-sdk/lib/third_party/apitools/base/py/base_api.py", line 747, in _RunMethod
    return self.ProcessHttpResponse(method_config, http_response, request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Caskroom/gcloud-cli/538.0.0/google-cloud-sdk/lib/third_party/apitools/base/py/base_api.py", line 753, in ProcessHttpResponse
    self.__ProcessHttpResponse(method_config, http_response, request))
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Caskroom/gcloud-cli/538.0.0/google-cloud-sdk/lib/third_party/apitools/base/py/base_api.py", line 612, in __ProcessHttpResponse
    raise exceptions.HttpError.FromResponse(
apitools.base.py.exceptions.HttpBadRequestError: HttpError accessing <https://cloudresourcemanager.googleapis.com/v1/organizations/985698468107:setOrgPolicy?alt=json>: response: <{'vary': 'Origin, X-Origin, Referer', 'content-type': 'application/json; charset=UTF-8', 'content-encoding': 'gzip', 'date': 'Wed, 10 Sep 2025 20:57:38 GMT', 'server': 'ESF', 'x-xss-protection': '0', 'x-frame-options': 'SAMEORIGIN', 'x-content-type-options': 'nosniff', 'server-timing': 'gfet4t7; dur=952', 'alt-svc': 'h3=":443"; ma=2592000,h3-29=":443"; ma=2592000', 'transfer-encoding': 'chunked', 'status': 400}>, content <{
  "error": {
    "code": 400,
    "message": "The policy contains invalid list value(s): [gmail.com]. Please fix the values in the policy and try again:\nStoragePolicy{resource=null, constraint=constraints/iam.allowedPolicyMemberDomains, etag=\u003cByteString@1aa6839d size=0 contents=\"\"\u003e, consistencyToken=\u003cByteString@1aa6839d size=0 contents=\"\"\u003e, updateTime=Optional.empty, policy=ListPolicy{inheritFromParent=false, unconditionalFragment=Optional[UnconditionalFragment{allValues=ALL_VALUES_UNSPECIFIED, allowedValues=[ListValue{type=EXACT, canonicalValue=C02mzrr8v, userSuppliedValue=Optional[C02mzrr8v]}, ListValue{type=EXACT, canonicalValue=gmail.com, userSuppliedValue=Optional[gmail.com]}], deniedValues=[], suggestedValue=Optional[]}], conditionalFragments=[]}}",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.BadRequest",
        "fieldViolations": [
          {
            "field": "policy.list_policy.allowed_values[1]",
            "description": "Invalid value: [gmail.com]."
          }
        ]
      }
    ]
  }
}
>
2025-09-10 23:57:38,288 ERROR    root            (gcloud.resource-manager.org-policies.set-policy) INVALID_ARGUMENT: The policy contains invalid list value(s): [gmail.com]. Please fix the values in the policy and try again:
StoragePolicy{resource=null, constraint=constraints/iam.allowedPolicyMemberDomains, etag=<ByteString@1aa6839d size=0 contents="">, consistencyToken=<ByteString@1aa6839d size=0 contents="">, updateTime=Optional.empty, policy=ListPolicy{inheritFromParent=false, unconditionalFragment=Optional[UnconditionalFragment{allValues=ALL_VALUES_UNSPECIFIED, allowedValues=[ListValue{type=EXACT, canonicalValue=C02mzrr8v, userSuppliedValue=Optional[C02mzrr8v]}, ListValue{type=EXACT, canonicalValue=gmail.com, userSuppliedValue=Optional[gmail.com]}], deniedValues=[], suggestedValue=Optional[]}], conditionalFragments=[]}}
- '@type': type.googleapis.com/google.rpc.BadRequest
  fieldViolations:
  - description: 'Invalid value: [gmail.com].'
    field: policy.list_policy.allowed_values[1]
